{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","onChange","event","target","value","type","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAgBlD,OACE,0BAAMC,SATa,SAAEC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAKd,2BACEO,SAfoB,SAACC,GACzBR,EAAcQ,EAAMC,OAAOC,QAevBC,KAAK,OACLD,MAAOX,M,uBCzBFa,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAUH,GAF5C,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXhB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHEO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAc,IAAD,EAEdf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAETxB,EAASC,GACNwB,MAAM,SAAAd,GAAG,OACNY,EAAS,CACPf,KAAMG,EACNU,SAAS,SAIhB,CAACpB,IAEGqB,EDjB2BI,CAAazB,GAAjCa,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAEjDoB,GAAW,uBAAGJ,UAAU,qCAAb,cAEb,yBAAKA,UAAU,aAETH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACAgB,IAAKhB,EAAIC,IACLD,UEfLiB,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,WAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAIhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEI4C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACEA,SAAUA,EACV0B,IAAK1B,UCdnB6B,IAASC,OAAQ,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.fbbf16f8.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value)\r\n  }\r\n\r\n  const handleSumbit = ( e ) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2) {\r\n      setCategories(prev => [ inputValue, ...prev])\r\n      setInputValue('')\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleSumbit}>      \r\n      <input \r\n        onChange={handleInputChange}\r\n        type=\"text\"\r\n        value={inputValue}\r\n       />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Y13YNSxyHCUX3xAYuPwAORkqaVmJhtz1`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n  \r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p> \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid =  ({category}) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__fadeIn\">Loading...</p> }\r\n     \r\n      <div className=\"card-grid\">              \r\n          {\r\n            images.map( img => (\r\n              <GifGridItem \r\n              key={img.id} \r\n              {...img} /> \r\n            ))\r\n          }      \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then( img => ( \r\n          setState({\r\n            data: img,\r\n            loading: false\r\n          })        \r\n      ))\r\n      \r\n  }, [category])\r\n\r\n  return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Office']);\r\n\r\n  return(\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid \r\n              category={category} \r\n              key={category}\r\n              />\r\n            )\r\n          )\r\n        }\r\n      </ol>\r\n\r\n\r\n    </>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render( <GifExpertApp />,document.getElementById('root'));\n\n"],"sourceRoot":""}